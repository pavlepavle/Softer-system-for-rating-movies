/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme.film;

import domen.Korisnik;
import domen.Ocena;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.event.ListSelectionListener;
import kontroler.Kontroler;
import modeli_tabela.TblModelOcena;

/**
 *
 * @author pavlepavle
 */
public class FrmPregledOcena extends javax.swing.JDialog {

    Korisnik k;

    /**
     * Creates new form FrmPregledOcena
     */
    public FrmPregledOcena(java.awt.Frame parent, boolean modal, Korisnik k) {
        super(parent, modal);
        initComponents();
        this.k = k;
        setTitle("Ocene korisnika: " + k.getKorisnickoIme());
        srediTabelu();
        srediFormu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtblOcene = new javax.swing.JTable();
        panel = new javax.swing.JPanel();
        txtNazivFilma3 = new javax.swing.JTextField();
        jsGodina3 = new javax.swing.JSpinner();
        checkBoxNazivFilma3 = new javax.swing.JCheckBox();
        checkBoxGodina = new javax.swing.JCheckBox();
        btnFiltriraj = new javax.swing.JButton();
        btnPonistiFilter = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jtblOcene.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Naziv filma", "Godina", "Ocena"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jtblOcene);

        txtNazivFilma3.setEnabled(false);

        jsGodina3.setModel(new javax.swing.SpinnerNumberModel(1894, 1894, 2017, 1));
        jsGodina3.setEnabled(false);

        checkBoxNazivFilma3.setText("Naziv filma:");
        checkBoxNazivFilma3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBoxNazivFilma3ActionPerformed(evt);
            }
        });

        checkBoxGodina.setText("Godina:");
        checkBoxGodina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBoxGodinaActionPerformed(evt);
            }
        });

        btnFiltriraj.setText("Filtriraj");
        btnFiltriraj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFiltrirajActionPerformed(evt);
            }
        });

        btnPonistiFilter.setText("Ponisti filter");
        btnPonistiFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPonistiFilterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(checkBoxNazivFilma3, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                            .addComponent(checkBoxGodina, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNazivFilma3)
                            .addComponent(jsGodina3, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)))
                    .addGroup(panelLayout.createSequentialGroup()
                        .addComponent(btnFiltriraj, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPonistiFilter)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(checkBoxNazivFilma3)
                    .addComponent(txtNazivFilma3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(checkBoxGodina)
                    .addComponent(jsGodina3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFiltriraj)
                    .addComponent(btnPonistiFilter))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelLayout = new javax.swing.GroupLayout(jPanel);
        jPanel.setLayout(jPanelLayout);
        jPanelLayout.setHorizontalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelLayout.setVerticalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void checkBoxNazivFilma3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBoxNazivFilma3ActionPerformed

        if (txtNazivFilma3.isEnabled()) {
            txtNazivFilma3.setEnabled(false);
        } else {
            txtNazivFilma3.setEnabled(true);
        }
    }//GEN-LAST:event_checkBoxNazivFilma3ActionPerformed

    private void checkBoxGodinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBoxGodinaActionPerformed

        if (jsGodina3.isEnabled()) {
            jsGodina3.setEnabled(false);
        } else {
            jsGodina3.setEnabled(true);
        }
    }//GEN-LAST:event_checkBoxGodinaActionPerformed

    private void btnFiltrirajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFiltrirajActionPerformed

        String unetaRec = txtNazivFilma3.getText().trim();
        int godina = (int) jsGodina3.getValue();
        TblModelOcena tmo = (TblModelOcena) jtblOcene.getModel();

        if (!checkBoxNazivFilma3.isSelected() && !checkBoxGodina.isSelected()) {
            JOptionPane.showMessageDialog(this, "Nije izabran nijedan kriterijum pretrage", "Pretraga filmova", JOptionPane.INFORMATION_MESSAGE);
        } else if (checkBoxNazivFilma3.isSelected() && checkBoxGodina.isSelected()) {
            tmo.pretraziOcene(unetaRec, godina, tmo.getKopijaListe(), -1);
        } else if (checkBoxNazivFilma3.isSelected()) {
            tmo.pretraziOcene(unetaRec, 0, tmo.getKopijaListe(), 1);
        } else if (checkBoxGodina.isSelected()) {
            tmo.pretraziOcene(unetaRec, godina, tmo.getKopijaListe(), 0);
        }
    }//GEN-LAST:event_btnFiltrirajActionPerformed

    private void btnPonistiFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPonistiFilterActionPerformed

        TblModelOcena tmo = (TblModelOcena) jtblOcene.getModel();
        tmo.ponistiFilter();
        txtNazivFilma3.setText("");
        checkBoxGodina.setSelected(false);
        checkBoxNazivFilma3.setSelected(false);
        txtNazivFilma3.setEnabled(false);
        jsGodina3.setEnabled(false);
    }//GEN-LAST:event_btnPonistiFilterActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFiltriraj;
    private javax.swing.JButton btnPonistiFilter;
    private javax.swing.JCheckBox checkBoxGodina;
    private javax.swing.JCheckBox checkBoxNazivFilma3;
    private javax.swing.JPanel jPanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jsGodina3;
    private javax.swing.JTable jtblOcene;
    private javax.swing.JPanel panel;
    private javax.swing.JTextField txtNazivFilma3;
    // End of variables declaration//GEN-END:variables

    private void srediTabelu() {

        try {

            List<Ocena> oceneKorisnika = new ArrayList<>();
            List<Ocena> listaOcena = Kontroler.vratiInstancu().vratiListuOcena();
            if (listaOcena.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Sistem ne moze da nadje nijednu ocenu", "Poruka", JOptionPane.INFORMATION_MESSAGE);
                //dispose();
            } else {
                for (Ocena ocena : listaOcena) {
                    if (ocena.getKorisnik().getKorisnikID() == k.getKorisnikID()) {
                        oceneKorisnika.add(ocena);
                    }
                }
                if (oceneKorisnika.isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Korisnik " + k.getKorisnickoIme() + " nema nijednu ocenu", "Poruka", JOptionPane.INFORMATION_MESSAGE);
                    //dispose();
                } else {
                    TblModelOcena tmo = new TblModelOcena(oceneKorisnika);
                    jtblOcene.setModel(tmo);
                }
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Poruka o gresci", JOptionPane.ERROR_MESSAGE);
        }

    }

    private void srediFormu() {
        JSpinner.NumberEditor editor = new JSpinner.NumberEditor(jsGodina3, "#");
        jsGodina3.setEditor(editor);
    }
}
